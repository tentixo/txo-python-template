{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://yourcompany.com/schemas/org-env-config.json",
  "title": "Organization Environment Configuration Schema",
  "description": "JSON Schema for organization and environment specific configuration files",
  "type": "object",
  "required": ["couchbase"],
  "additionalProperties": false,
  "properties": {
    "azure": {
      "type": "object",
      "description": "Azure Active Directory configuration for OAuth authentication",
      "additionalProperties": false,
      "properties": {
        "tenant-id": {
          "type": "string",
          "description": "Azure AD tenant identifier (GUID format)",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "examples": ["4801be4c-4c84-48bb-a6de-c778db042a23"]
        },
        "client-id": {
          "type": "string",
          "description": "Azure AD application (client) identifier",
          "examples": ["12345678-1234-1234-1234-123456789012"]
        },
        "oauth-scope": {
          "type": "string",
          "description": "OAuth 2.0 scope for the application",
          "examples": ["https://api.businesscentral.dynamics.com/.default", "https://graph.microsoft.com/.default"]
        }
      }
    },
    "dmarc": {
      "type": "object",
      "description": "DMARC report processing configuration",
      "additionalProperties": false,
      "properties": {
        "schema_version": {
          "type": "string",
          "description": "Version of the DMARC data schema used for document structure",
          "pattern": "^[0-9]+\\.[0-9]+$",
          "default": "1.0",
          "examples": ["1.0", "1.1", "2.0"]
        },
        "batch_size": {
          "type": "integer",
          "description": "Number of reports to process in a single batch",
          "minimum": 1,
          "maximum": 1000,
          "default": 100,
          "examples": [50, 100, 200]
        },
        "processing_timeout": {
          "type": "integer",
          "description": "Maximum time in seconds to spend processing a single ZIP file",
          "minimum": 30,
          "maximum": 3600,
          "default": 300,
          "examples": [300, 600, 1200]
        },
        "archive_processed_files": {
          "type": "boolean",
          "description": "Whether to move processed ZIP files to an archive directory",
          "default": false
        },
        "archive_directory": {
          "type": "string",
          "description": "Directory name for archived processed files (relative to files directory)",
          "minLength": 1,
          "maxLength": 255,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "default": "processed",
          "examples": ["processed", "archive", "completed"]
        },
        "validate_xml": {
          "type": "boolean",
          "description": "Whether to perform strict XML validation against DMARC schema",
          "default": true
        },
        "max_file_size_mb": {
          "type": "integer",
          "description": "Maximum ZIP file size in MB that will be processed",
          "minimum": 1,
          "maximum": 1000,
          "default": 100,
          "examples": [50, 100, 500]
        }
      }
    },
    "couchbase": {
      "type": "object",
      "description": "Couchbase database configuration for storing DMARC reports",
      "required": ["cb-user", "cb-bucket", "cb-scope", "cb-collection"],
      "additionalProperties": false,
      "properties": {
        "cb-connection-string": {
          "type": "string",
          "description": "Couchbase cluster connection string",
          "pattern": "^couchbase://[a-zA-Z0-9.-]+(:[0-9]+)?$",
          "default": "couchbase://localhost",
          "examples": ["couchbase://localhost", "couchbase://cluster.example.com", "couchbase://node1.example.com:11210"]
        },
        "cb-user": {
          "type": "string",
          "description": "Couchbase username for authentication",
          "minLength": 1,
          "maxLength": 128,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["svcDmarc", "dmarc_user", "app-user"]
        },
        "cb-bucket": {
          "type": "string",
          "description": "Couchbase bucket name for storing DMARC data",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "examples": ["dmarc", "dmarc_reports", "email_security"]
        },
        "cb-scope": {
          "type": "string",
          "description": "Couchbase scope name within the bucket",
          "minLength": 1,
          "maxLength": 251,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "default": "_default",
          "examples": ["_default", "reports", "production", "staging"]
        },
        "cb-collection": {
          "type": "string",
          "description": "Couchbase collection name within the scope",
          "minLength": 1,
          "maxLength": 251,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "default": "_default",
          "examples": ["_default", "raw", "dmarc_raw", "reports"]
        },
        "cb-schema-version": {
          "type": "string",
          "description": "Schema version for documents stored in Couchbase",
          "pattern": "^[0-9]+\\.[0-9]+$",
          "default": "1.0",
          "examples": ["1.0", "1.1", "2.0"]
        },
        "cb-timeout-seconds": {
          "type": "integer",
          "description": "Connection timeout in seconds for Couchbase operations",
          "minimum": 1,
          "maximum": 300,
          "default": 30,
          "examples": [15, 30, 60]
        },
        "cb-retry-attempts": {
          "type": "integer",
          "description": "Number of retry attempts for failed Couchbase operations",
          "minimum": 0,
          "maximum": 10,
          "default": 3,
          "examples": [1, 3, 5]
        },
        "cb-enable-tls": {
          "type": "boolean",
          "description": "Whether to use TLS encryption for Couchbase connections",
          "default": false
        },
        "cb-cert-path": {
          "type": "string",
          "description": "Path to TLS certificate file for Couchbase connection (if cb-enable-tls is true)",
          "examples": ["/path/to/cert.pem", "./certs/couchbase.crt"]
        }
      },
      "if": {
        "properties": {
          "cb-enable-tls": {"const": true}
        }
      },
      "then": {
        "required": ["cb-cert-path"]
      }
    }
  }
}